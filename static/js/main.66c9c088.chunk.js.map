{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","placeholder","role","onClick","toggleode","htmlFor","TextForm","useState","text","setText","heading","class","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","split","join","defaultProps","Alert","alert","msg","App","setMode","setAlert","showAlert","message","toggleMode","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66c9c088.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-light`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            {/* <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button> */}\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable dark mode\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLowClick = () => {\r\n    // console.log(\"Lowecase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  // const handleCapitalClick = () => {\r\n  //   let firstchar = text.charAt(0);\r\n  //   let newText = firstchar.toUpperCase();\r\n  //   setText(newText + text.slice(1));\r\n  // };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"onchange was clicked\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleClearAll = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[]+/);\r\n    setText(newText.join(\" \"));\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div class=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"MyBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to lowercase\r\n        </button>\r\n        {/* <button className=\"btn btn-primary mx-2\" onClick={handleCapitalClick}>\r\n          Capitalize first character\r\n        </button> */}\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleClearAll}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1>your text has</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes needed to read </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div\r\n          className=\"alert alert-warning alert-dismissible fade show\"\r\n          role=\"alert\"\r\n        >\r\n          {props.alert.type} : {props.alert.msg}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"yellow\";\n      showAlert(\"dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar\n        title=\"TextUtil2s\"\n        aboutText=\"AboutTextUtils\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyse\"\n                mode={mode}\n              />\n            </Route>\n          </Switch> */}\n        <TextForm />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}